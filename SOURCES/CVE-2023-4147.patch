From 8dee36e6d25ebf2643776617bd45b1da13eecfcf Mon Sep 17 00:00:00 2001
From: Ryan Sullivan <rysulliv@redhat.com>
Date: Mon, 28 Aug 2023 15:31:54 -0400
Subject: [KPATCH CVE-2023-4147] kpatch fixes for CVE-2023-4147

Kernels:
5.14.0-284.11.1.el9_2
5.14.0-284.18.1.el9_2
5.14.0-284.25.1.el9_2


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-9/-/merge_requests/48
Approved-by: Yannick Cote (@ycote1)
Approved-by: Joe Lawrence (@joe.lawrence)
Changes since last build:
arches: x86_64 ppc64le
cls_fw.o: changed function: fw_set_parms
nf_tables_api.o: changed function: nf_tables_newrule
nf_tables_api.o: changed function: nft_chain_lookup_byid
nf_tables_api.o: changed function: nft_verdict_init
nft_byteorder.o: changed function: nft_byteorder_eval
nft_set_pipapo.o: changed function: nft_pipapo_remove
---------------------------

Modifications: none

commit ec845b42a63a65bf55aebf7f46f0be2b87e6528a
Author: Phil Sutter <psutter@redhat.com>
Date:   Fri Aug 4 16:38:39 2023 +0200

    netfilter: nf_tables: disallow rule addition to bound chain via NFTA_RULE_CHAIN_ID

    Bugzilla: https://bugzilla.redhat.com/2228990
    CVE: CVE-2023-4147
    Y-Commit: e287383a1b18ce262793d0d1c4e50e2b47e7f07b

    O-Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=2225271
    Upstream Status: commit 0ebc1064e4874
    O-CVE: CVE-2023-4147

    commit 0ebc1064e4874d5987722a2ddbc18f94aa53b211
    Author: Pablo Neira Ayuso <pablo@netfilter.org>
    Date:   Sun Jul 23 16:41:48 2023 +0200

        netfilter: nf_tables: disallow rule addition to bound chain via NFTA_RULE_CHAIN_ID

        Bail out with EOPNOTSUPP when adding rule to bound chain via
        NFTA_RULE_CHAIN_ID. The following warning splat is shown when
        adding a rule to a deleted bound chain:

         WARNING: CPU: 2 PID: 13692 at net/netfilter/nf_tables_api.c:2013 nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]
         CPU: 2 PID: 13692 Comm: chain-bound-rul Not tainted 6.1.39 #1
         RIP: 0010:nf_tables_chain_destroy+0x1f7/0x210 [nf_tables]

        Fixes: d0e2c7de92c7 ("netfilter: nf_tables: add NFT_CHAIN_BINDING")
        Reported-by: Kevin Rich <kevinrich1337@gmail.com>
        Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
        Signed-off-by: Florian Westphal <fw@strlen.de>

    Signed-off-by: Phil Sutter <psutter@redhat.com>
    Signed-off-by: Herton R. Krzesinski <herton@redhat.com>

Signed-off-by: Ryan Sullivan <rysulliv@redhat.com>
---
 net/netfilter/nf_tables_api.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/net/netfilter/nf_tables_api.c b/net/netfilter/nf_tables_api.c
index 034f9761ca83..0c275d28c3d9 100644
--- a/net/netfilter/nf_tables_api.c
+++ b/net/netfilter/nf_tables_api.c
@@ -3338,8 +3338,6 @@ static int nf_tables_newrule(struct sk_buff *skb, const struct nfnl_info *info,
 			NL_SET_BAD_ATTR(extack, nla[NFTA_RULE_CHAIN]);
 			return PTR_ERR(chain);
 		}
-		if (nft_chain_is_bound(chain))
-			return -EOPNOTSUPP;
 
 	} else if (nla[NFTA_RULE_CHAIN_ID]) {
 		chain = nft_chain_lookup_byid(net, table, nla[NFTA_RULE_CHAIN_ID]);
@@ -3351,6 +3349,9 @@ static int nf_tables_newrule(struct sk_buff *skb, const struct nfnl_info *info,
 		return -EINVAL;
 	}
 
+	if (nft_chain_is_bound(chain))
+		return -EOPNOTSUPP;
+
 	if (nla[NFTA_RULE_HANDLE]) {
 		handle = be64_to_cpu(nla_get_be64(nla[NFTA_RULE_HANDLE]));
 		rule = __nft_rule_lookup(chain, handle);
-- 
2.40.1


